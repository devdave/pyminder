import AppKit
import WebKit
from _typeshed import Incomplete
from collections.abc import Callable as Callable
from webview import FOLDER_DIALOG as FOLDER_DIALOG, OPEN_DIALOG as OPEN_DIALOG, SAVE_DIALOG as SAVE_DIALOG, parse_file_type as parse_file_type, windows as windows
from webview.js.css import disable_text_select as disable_text_select
from webview.menu import Menu as Menu, MenuAction as MenuAction, MenuSeparator as MenuSeparator
from webview.screen import Screen as Screen
from webview.util import DEFAULT_HTML as DEFAULT_HTML, create_cookie as create_cookie, js_bridge_call as js_bridge_call, parse_api_js as parse_api_js
from webview.window import FixPoint as FixPoint

settings: Incomplete
bundle: Incomplete
info: Incomplete
NSFullSizeContentViewWindowMask: Incomplete
NSWindowTitleHidden: Incomplete
logger: Incomplete
renderer: str

class BrowserView:
    instances: Incomplete
    app: Incomplete
    cascade_loc: Incomplete
    class AppDelegate(AppKit.NSObject):
        def applicationShouldTerminate_(self, app): ...
    class WindowHost(AppKit.NSWindow):
        def canBecomeKeyWindow(self): ...
    class WindowDelegate(AppKit.NSObject):
        def windowShouldClose_(self, window): ...
        def windowWillClose_(self, notification) -> None: ...
        def windowDidResize_(self, notification) -> None: ...
        def windowDidMiniaturize_(self, notification) -> None: ...
        def windowDidDeminiaturize_(self, notification) -> None: ...
        def windowDidEnterFullScreen_(self, notification) -> None: ...
        def windowDidExitFullScreen_(self, notification) -> None: ...
        def windowDidMove_(self, notification) -> None: ...
    class JSBridge(AppKit.NSObject):
        window: Incomplete
        def initWithObject_(self, window): ...
        def userContentController_didReceiveScriptMessage_(self, controller, message) -> None: ...
    class BrowserDelegate(AppKit.NSObject):
        def webView_runJavaScriptAlertPanelWithMessage_initiatedByFrame_completionHandler_(self, webview, message, frame, handler) -> None: ...
        def webView_didReceiveAuthenticationChallenge_completionHandler_(self, webview, challenge, handler) -> None: ...
        def webView_runJavaScriptConfirmPanelWithMessage_initiatedByFrame_completionHandler_(self, webview, message, frame, handler) -> None: ...
        def webView_runOpenPanelWithParameters_initiatedByFrame_completionHandler_(self, webview, param, frame, handler) -> None: ...
        def webView_createWebViewWithConfiguration_forNavigationAction_windowFeatures_(self, webview, config, action, features): ...
        def webView_decidePolicyForNavigationAction_decisionHandler_(self, webview, action, handler) -> None: ...
        def webView_didFinishNavigation_(self, webview, nav) -> None: ...
        def userContentController_didReceiveScriptMessage_(self, controller, message) -> None: ...
    class FileFilterChooser(AppKit.NSPopUpButton):
        filter: Incomplete
        def initWithFilter_(self, file_filter): ...
        def onChange_(self, sender) -> None: ...
    class WebKitHost(WebKit.WKWebView):
        initialLocation: Incomplete
        def mouseDown_(self, event) -> None: ...
        def mouseDragged_(self, event) -> None: ...
        def willOpenMenu_withEvent_(self, menu, event) -> None: ...
        def keyDown_(self, event) -> None: ...
    uid: Incomplete
    pywebview_window: Incomplete
    js_bridge: Incomplete
    closed: Incomplete
    closing: Incomplete
    shown: Incomplete
    loaded: Incomplete
    confirm_close: Incomplete
    title: Incomplete
    text_select: Incomplete
    is_fullscreen: bool
    hidden: Incomplete
    minimized: Incomplete
    maximized: Incomplete
    localization: Incomplete
    screen: Incomplete
    window: Incomplete
    webkit: Incomplete
    datastore: Incomplete
    frameless: Incomplete
    easy_drag: Incomplete
    url: Incomplete
    def __init__(self, window) -> None: ...
    def first_show(self) -> None: ...
    def show(self) -> None: ...
    def hide(self) -> None: ...
    def destroy(self) -> None: ...
    def set_title(self, title) -> None: ...
    def toggle_fullscreen(self) -> None: ...
    def resize(self, width, height, fix_point) -> None: ...
    def maximize(self) -> None: ...
    def minimize(self) -> None: ...
    def restore(self) -> None: ...
    def move(self, x, y) -> None: ...
    def center(self) -> None: ...
    def get_cookies(self): ...
    def get_current_url(self): ...
    def load_url(self, url) -> None: ...
    def load_html(self, content, base_uri) -> None: ...
    def evaluate_js(self, script): ...
    def create_file_dialog(self, dialog_type, directory, allow_multiple, save_filename, file_filter, main_thread: bool = False): ...
    @staticmethod
    def nscolor_from_hex(hex_string, alpha: float = 1.0): ...
    @staticmethod
    def get_instance(attr, value): ...
    @staticmethod
    def display_confirmation_dialog(first_button, second_button, message): ...
    @staticmethod
    def should_close(window): ...
    @staticmethod
    def print_webview(webview) -> None: ...
    @staticmethod
    def pyobjc_method_signature(signature_str): ...
    @staticmethod
    def quote(string): ...

def setup_app() -> None: ...
def create_window(window) -> None: ...
def set_title(title, uid) -> None: ...
def create_confirmation_dialog(title, message, uid): ...
def create_file_dialog(dialog_type, directory, allow_multiple, save_filename, file_types, uid): ...
def load_url(url, uid) -> None: ...
def load_html(content, base_uri, uid) -> None: ...
def set_app_menu(app_menu_list): ...
def get_active_window(): ...
def destroy_window(uid) -> None: ...
def hide(uid) -> None: ...
def show(uid) -> None: ...
def toggle_fullscreen(uid) -> None: ...
def set_on_top(uid, top) -> None: ...
def resize(width, height, uid, fix_point) -> None: ...
def minimize(uid) -> None: ...
def restore(uid) -> None: ...
def move(x, y, uid) -> None: ...
def get_current_url(uid): ...
def get_cookies(uid): ...
def evaluate_js(script, uid): ...
def get_position(uid): ...
def get_size(uid): ...
def get_screens(): ...
def add_tls_cert(certfile) -> None: ...
