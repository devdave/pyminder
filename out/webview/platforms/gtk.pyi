from _typeshed import Incomplete
from gi.repository import Soup as Soup
from typing import Any
from webview import FOLDER_DIALOG as FOLDER_DIALOG, OPEN_DIALOG as OPEN_DIALOG, SAVE_DIALOG as SAVE_DIALOG, parse_file_type as parse_file_type, windows as windows
from webview.js.css import disable_text_select as disable_text_select
from webview.menu import Menu as Menu, MenuAction as MenuAction, MenuSeparator as MenuSeparator
from webview.screen import Screen as Screen
from webview.util import DEFAULT_HTML as DEFAULT_HTML, create_cookie as create_cookie, js_bridge_call as js_bridge_call, parse_api_js as parse_api_js
from webview.window import FixPoint as FixPoint, Window as Window

logger: Incomplete
renderer: str
webkit_ver: Incomplete
settings: Incomplete

class BrowserView:
    instances: Incomplete
    class JSBridge:
        window: Incomplete
        uid: Incomplete
        def __init__(self, window: Window) -> None: ...
        def call(self, func_name: str, param: Any, value_id: str): ...
    uid: Incomplete
    pywebview_window: Incomplete
    is_fullscreen: bool
    js_results: Incomplete
    window: Incomplete
    shown: Incomplete
    loaded: Incomplete
    localization: Incomplete
    screen: Incomplete
    js_bridge: Incomplete
    text_select: Incomplete
    cookie_manager: Incomplete
    manager: Incomplete
    webview: Incomplete
    move_progress: bool
    transparent: Incomplete
    def __init__(self, window: Window) -> None: ...
    def close_window(self, *data): ...
    def on_window_state_change(self, window, window_state) -> None: ...
    def on_js_bridge_call(self, manager, message) -> None: ...
    def on_window_resize(self, window, allocation) -> None: ...
    def on_window_configure(self, window, event) -> None: ...
    def on_webview_ready(self, arg1, arg2) -> None: ...
    def on_load_finish(self, webview, status) -> None: ...
    def on_navigation(self, webview, decision, decision_type) -> None: ...
    def on_mouse_release(self, sender, event) -> None: ...
    point_diff: Incomplete
    def on_mouse_press(self, _, event) -> None: ...
    def on_mouse_move(self, _, event) -> None: ...
    def show(self) -> None: ...
    def hide(self) -> None: ...
    def destroy(self) -> None: ...
    def set_title(self, title) -> None: ...
    def toggle_fullscreen(self) -> None: ...
    def resize(self, width, height, fix_point) -> None: ...
    def move(self, x, y) -> None: ...
    def minimize(self) -> None: ...
    def restore(self) -> None: ...
    def create_confirmation_dialog(self, title, message): ...
    def create_file_dialog(self, dialog_type, directory, allow_multiple, save_filename, file_types): ...
    def get_cookies(self): ...
    def get_current_url(self): ...
    def load_url(self, url) -> None: ...
    def load_html(self, content, base_uri) -> None: ...
    def evaluate_js(self, script): ...

def setup_app() -> None: ...
def create_window(window) -> None: ...
def set_title(title, uid) -> None: ...
def destroy_window(uid) -> None: ...
def toggle_fullscreen(uid) -> None: ...
def add_tls_cert(certfile) -> None: ...
def set_on_top(uid, top) -> None: ...
def resize(width, height, uid, fix_point) -> None: ...
def move(x, y, uid) -> None: ...
def hide(uid) -> None: ...
def show(uid) -> None: ...
def minimize(uid) -> None: ...
def restore(uid) -> None: ...
def get_cookies(uid): ...
def get_current_url(uid): ...
def load_url(url, uid) -> None: ...
def load_html(content, base_uri, uid) -> None: ...
def create_confirmation_dialog(title, message, uid): ...
def set_app_menu(app_menu_list) -> None: ...
def get_active_window(): ...
def create_file_dialog(dialog_type, directory, allow_multiple, save_filename, file_types, uid): ...
def evaluate_js(script, uid): ...
def get_position(uid): ...
def get_size(uid): ...
def get_screens(): ...
def configure_transparency(c) -> None: ...
